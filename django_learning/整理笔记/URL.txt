一个URL(Uniform Resource Locator)由几部分组成：
scheme：代表访问的协议，一般为http或者是https及ftp等
host：主机名，域名，如www.baidu.com
port：端口号，HTTP协议是80端口，HTTPS协议是443端口
path：查找路径，如：www.jianshu.com/trending/now，后面的trending/now就是path
query-string：查询字符串，如www.baidu.com/s?wd=python，后面的wd=python就是查询字符串，
s?wd是查询前缀
anchor：锚点，后台一般不管，前端用来做页面定位

！！注意：URL中所有的字符都是ASCII字符集，如果出现非ASCII字符，如中文，浏览器会进行编码再进行传输。


对于url分模块化：
【在分模块时最好给此模块指定一个应用名app-(代表下划线)name = “xxx”】
1.在创建的app中创建一个urls.py文件，在创建的app中的views.py中写视图函数
2.其次，在创建的urls.py文件中先导入
from django.urls import path
后
from . import views将文件导入到此文件中
3.然后按项目中的格式在此文件urlpatterns中添加path映射视图函数
4.放回项目的urls.py文件中，在urls库添加一个include的包
5.添加path，引用include对应app的urls文件，具体写法看代码


对于url反转：
1.已知视图函数，反转url，可以通过reverse实现
1）如果由应用命名空间或实例命名空间，应在反转的基础上加上命名空间

2）如果这个url需要传递参数，那么可以通过kwargs来传递参数

3）因django中的reverse反转url不区分GET和POST请求，因此不能在反转时添加查询字符串的参数。如果想添加查询字符串的参数，需要手动添加。
